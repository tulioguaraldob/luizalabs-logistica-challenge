// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/order_products/repository.go
//
// Generated by this command:
//
//	mockgen -source=internal/domain/order_products/repository.go -destination=internal/domain/services/mocks/order_products/mock_order_products_repository.go -package=orderproducts
//

// Package orderproducts is a generated GoMock package.
package orderproducts

import (
	reflect "reflect"

	entities "github.com/tulioguaraldob/luizalabs-logistica-challenge/internal/domain/entities"
	gomock "go.uber.org/mock/gomock"
)

// MockRepository is a mock of Repository interface.
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
	isgomock struct{}
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository.
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance.
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// Add mocks base method.
func (m *MockRepository) Add(orderProduct *entities.OrderProduct) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", orderProduct)
	ret0, _ := ret[0].(error)
	return ret0
}

// Add indicates an expected call of Add.
func (mr *MockRepositoryMockRecorder) Add(orderProduct any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockRepository)(nil).Add), orderProduct)
}

// GetByOrderID mocks base method.
func (m *MockRepository) GetByOrderID(orderId uint) ([]*entities.OrderProduct, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByOrderID", orderId)
	ret0, _ := ret[0].([]*entities.OrderProduct)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByOrderID indicates an expected call of GetByOrderID.
func (mr *MockRepositoryMockRecorder) GetByOrderID(orderId any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByOrderID", reflect.TypeOf((*MockRepository)(nil).GetByOrderID), orderId)
}
