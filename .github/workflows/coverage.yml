name: Go Test Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '>=1.18'

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run tests with coverage
      run: go test -v -coverprofile=coverage.out ./...

    - name: Convert coverage to Cobertura XML
      uses: jandelgado/gcov2lcov@latest
      with:
        coverage-file: coverage.out
        output-file: coverage.xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        files: coverage.xml
        fail_ci_if_error: true
        verbose: true

  coverage-badge:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Get Go version
      id: go_version
      run: echo "::set-output name=version::$(go version | awk '{print $3}')"

    - name: Generate coverage badge
      uses: jossef/go-coverage-badge@v1.3.0
      with:
        coverage-file: coverage.out
        output: coverage.svg

    - name: Update README with coverage badge
      uses: anmol098/w3-total-cache-github-action@releases/v1.13
      with:
        file: README.md
        replacer: '!\\[Coverage Status\\]\\(.*\\)'
        to_value: '!\[Coverage Status\](./coverage.svg)'
        commit_message: "docs(coverage): update coverage badge"
        github_token: ${{ github.token }}